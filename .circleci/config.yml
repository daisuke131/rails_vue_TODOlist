# version: 2.1

# # 共通の実行イメージをexecutorとして定義
# executors:
#   default:
#     working_directory: ~/rails_vue_TODOlist
#     docker:
#       # rubyの実行イメージ
#       - image: circleci/ruby:2.6.1-stretch
#         environment:
#           RAILS_ENV: test
#           BUNDLE_JOBS: 4
#           BUNDLE_RETRY: 3
#           BUNDLE_PATH: vendor/bundle
#       # mysqlの実行イメージ
#       - image: circleci/mysql:8.0.16
#         command: mysqld --default-authentication-plugin=mysql_native_password
#         environment:
#           MYSQL_ROOT_PASSWORD: root
#           MYSQL_USER: root
#           MYSQL_DATABASE: rails_vue_TODOlist_test

# commands:
#   save_code_cache:
#     steps:
#       - save_cache:
#           key: v1-code-cache-{{ .Environment.CIRCLE_SHA1 }}
#           paths:
#             - ~/rails_vue_TODOlist

#   restore_code_cache:
#     - restore_cache: # ソースコードの復元
#           key: v1-code-cache-{{ .Environment.CIRCLE_SHA1 }}

#   save_gem_cache:
#     - save_cache:
#           key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle

#   restore_gem_cache:
#     - restore_cache: # vendor/bundleを復元
#           key:
#             - v1-gem-cache-{{ checksum "Gemfile.lock" }}

# jobs:
#   fetch_source_code:
#     executor: default
#     steps:
#       - checkout
#       - save_code_cache

#   bundle_dependencies:
#     executor: default
#     steps:
#       - checkout
#       - restore_code_cache
#       - restore_gem_cache
#       # - run:
#       #     name: Bundle Install Dependencies
#       #     command: |
#       #       gem install bundler -v 2.0.1
#       #       bundle install
#       - run: bundle install
#       - save_gem_cache

#   rubocop:
#     executor: default
#     steps:
#       - checkout
#       - restore_code_cache
#       - restore_gem_cache

#       # - run:
#       #     name: Execute rubocop
#       #     command: |
#       #       gem install bundler -v 2.0.1
#       #       bundle exec rubocop
#       - run: bundle exec rubocop

#   rspec:
#     executor: default
#     steps:
#       - checkout
#       - restore_code_cache
#       - restore_gem_cache
#       # - run:
#       #     name: Watting stand up database
#       #     command: |
#       #       dockerize -wait \
#       #       tcp://127.0.0.1:3306 -timeout 120s
#       # - run:
#       #     name: Database setup
#       #     command: |
#       #       mv ./config/database.yml.ci  ./config/database.yml
#       # - run:
#       #     name: Testing DB migration and seed
#       #     command: |
#       #       gem install bundler -v 2.0.1
#       #       bundle exec rails db:create db:migrate db:seed db:drop
#       # - run:
#       #     name: Run RSpec
#       #     command: |
#       #       mkdir /tmp/test-results
#       #       mkdir -p ~/rspec
#       #       bundle exec rails db:create db:migrate
#       #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
#       #       gem install bundler -v 2.0.1
#       #       bundle exec rspec --require rails_helper \
#       #                         --color \
#       #                         --format progress \
#       #                         --format RspecJunitFormatter \
#       #                         --out ~/rspec/rspec.xml
#       # # collect reports
#       # - store_test_results:
#       #     path: ~/rspec
#       # - store_artifacts:
#       #     path: /tmp/test-results
#       #     destination: build
#       - run: bundle exec rails db:create db:schema:load db:migrate
#       - run: bundle exec rspec

#   # デプロイ
#   # deploy_by_capistrano:
#   #   executor:
#   #     name: default
#   #   steps:
#   #     - restore_cache: # ソースコードの復元
#   #         key: v4-hello_world_rails-{{ .Environment.CIRCLE_SHA1 }}
#   #     - restore_cache: # vendor/bundleを復元
#   #         key: v4-dependencies-{{ checksum "Gemfile.lock" }}
#   #     - deploy:
#   #         name: deploy by capistrano
#   #         command: |
#   #           gem install bundler -v 2.0.1
#   #           bundle exec cap production deploy

# workflows:
#   build:
#     jobs:
#       - fetch_source_code
#       - bundle_dependencies:
#           requires:
#             - fetch_source_code
#       - rubocop: # bundle_dependenciesの後にrubocopを実行する
#           requires:
#             - bundle_dependencies
#       - rspec:
#           requires: # bundle_dependenciesの後にrspecを実行する
#             - bundle_dependencies
#       - deploy_by_capistrano:
#           requires: # すべてのテスト実行後にdeployを行う
#             - rubocop
#             - rspec
#           filters: # masterブランチのみdeployを行う
#             branches:
#               only: master

version: 2.1
jobs:
  build:
    docker:
    - image: circleci/ruby:2.6.1-node
      environment:
        RAILS_ENV: test
    - image: circleci/mysql:5.7-ram
      environment:
        MYSQL_DATABASE: circleci-example-for-rails_test
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_ROOT_HOST: '%'
        MYSQL_USER: root
    working_directory: ~/circleci-example-for-rails
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-
    - run:
        name: install dependencies
        command: |
          gem install bundler -v 2.0.1
          bundle install --jobs=4 --retry=3 --path vendor/bundle
    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
    # Database setup
    - run:
        name: Prepare db
        command: |
          bundle exec rails db:create db:schema:load --trace
    # run tests!
    - run:
        name: Run rspec
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          bundle exec rspec --format progress --color --format documentation

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results